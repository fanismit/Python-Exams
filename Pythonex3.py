def maxDistance(table,limit):
    table.sort()# Ο πίνακας των αποστάσεων που δίνει ο χρήστης  ταξινομούνται
    x=sum(table)  # Δημιουργώ μία μεταβλητή x που θα αποτελεί το άθροισμα των στοιχείων του πίνακα
    lop=0
    dist=0
    while(lop<x):#Στο παρακάτω loop προσπαθώ να βρω τον αριθμό των αποστάσεων της λίστας table
        lop+=table[dist]
        dist+=1                       
    table2=[]                       #Η μεταβλητή table2 αποτελεί μία λίστα που καθε στοιχείο της, δείχνει τον αρίθμο των επαναλήψεων του αριθμου που βρίσκεται στην αντιστοιχη θέση της λίστας table
    max=[0,0]                         #Η λίστα maxo αποτελεί όλα τα στοιχεία του αθροίσματος που θα χρηιμοποιηθούν για την μεγιστοποιήση του αθροίσματος
    for t in range(0,dist):     #Στο παρακάτω loop αφόυ σε κάθε επανάληψη αρχικοποιώ το k με 1,μετράω πόσες φόρες εμφανίζεται ένα στοιχείο της λίστας table σε άλλες θέσεις της λιστας ,σε περίπτωση που βρεθεί ίδιος αρίθμος γίνεται αντικατάσταση με 0 και στην λίστα table2 αυξάνεται ο αριθμός των επαναλήψεων του
        k=1
        for f in range(0,dist): 
            if(table[t]==table[f] and f!=t):
                k+=1
                table.insert(f,0)
        table2.insert(t,k)
    maxi=0
    table.append(0)
    for m in range(0,dist):         #Στο παρακάτω loop ξεκινάω απο την αρχή και αθροίζω τα στοιχεία της λίστας table μεχρι να μη ξεπεράσω το όριο(μεταβλητή maxi) και αποθηκεύω στην λίστα maxo τα στοιχεία που αθροιζω και αφαιρώ απο την λίστα table2 το πλήθος των αντίστοιχων στοιχείων που χρησιμοποίησα
        if(maxi+table[m]<=limit and table2[m]>=1):
            maxi+=table[m]          
            max.append(table[m])
            table2[m]-=1
    defi=limit-sum(max) #Η μεταβλήτη defi αποτελεί την διαφορά ανάμεσα στο όριο και και το αθροισμα της λίστας maxo
    tries=0
    while(tries<=9999):
        for i in range(0,dist):#Σε αυτό το μέρος προσπαθω να βρω το μέγιστο αθροισμα της λιστας προσπαθώντας με ζευγαρια να προσθαφαιρέσω ωστε να βγει μικρότερει διαφορά δηλαδή το defi
           for j in range(0,dist):
            if(i!=j and  sum(max)-table[i]+table[j]<=limit and limit-(sum(max)-table[i]+table[j])<defi and max.count(table[i])>0 and table2[j]>0 ):
                table2[i]+=1 #Εφόσον αφαιρώ κάτι από τη λίστα maxo τοτε στη λίστα table2 θα προσθέσω 1 στο αντίστοιχω ψηφίο που αφάιρώ από το άθροισμα.Αντίστροφα στην επόμενη γραμμή
                table2[j]-=1
                max.remove(table[i])
                max.append(table[j])
                defi=limit-sum(max)         
        tries+=1
    print("the maximum sum is",limit-defi)


   
       
        



                
                    
        


























    

